@{
    ViewBag.Title = "Admin: Dashboard";
}

<style>
    .card-body {
        margin-bottom: 2rem;
        padding: 2rem;
        font-size: 20px;
    }

    .card {
        border-radius: 5px;
    }

    .card-footer .btn {
        width: 100%;
    }

    .row > div {
        margin-bottom: 2rem;
    }
</style>

<h2>Dashboard</h2>
<main class="mt-5 pt-3">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-3">
                <div class="card bg-primary text-white h-100">
                    <div class="card-body py-5">Users: <span id="user"></span></div>
                    <div class="card-footer d-flex">
                        @Html.ActionLink("View Details", "AppUser", "Account", new { area = "Admin" }, new { @class = "btn btn-primary" })
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <div class="card bg-warning text-dark h-100">
                    <div class="card-body py-5">Roles: <span id="role"></span></div>
                    <div class="card-footer d-flex">
                        @Html.ActionLink("View Details", "AppRole", "Account", new { area = "Admin" }, new { @class = "btn btn-warning" })
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <div class="card bg-success text-white h-100">
                    <div class="card-body py-5">Products: <span id="product"></span></div>
                    <div class="card-footer d-flex">
                        @Html.ActionLink("Products", "Product", "Store", new { area = "Admin" }, new { @class = "btn btn-success" })
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <div class="card bg-danger text-white h-100">
                    <div class="card-body py-5">Categories: <span id="category"></span></div>
                    <div class="card-footer d-flex">
                        @Html.ActionLink("Categorys", "Category", "Store", new { area = "Admin" }, new { @class = "btn btn-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card bg-info text-white h-100">
                    <div class="card-body py-5">Orders: <span id="order"></span></div>
                    <div class="card-footer d-flex">
                        @Html.ActionLink("Orders", "Order", "Store", new { area = "Admin" }, new { @class = "btn btn-info" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card bg-info text-white h-100">
                    <div class="card-body py-5">Clear Cache</div>
                    <div class="card-footer d-flex">
                        @Html.ActionLink("Clear Cache", "ClearCache", "Dashboard", new { area = "Admin" }, new { @class = "btn btn-primary" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <canvas id="myChart" style="max-width: 700px;"></canvas>
            </div>
            <div class="col-md-6">
                <canvas id="myChart2" style="max-width: 700px;"></canvas>
            </div>
        </div>
    </div>
</main>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>

@section Scripts
{
    <script>
        $().ready(function () {
            getUserCount();
            getRoleCount();
            getProductCount();
            getCategoryCount();
            getOrderCount();
        });

        function getUserCount() {
            $.ajax({
                url: '/api/User/GetCount/',
                type: 'GET',
                success: function (result) {
                    $('#user').text(result);
                },
                error: function (result) {
                    //alert("Error:" + result);
                }
            });
        }

        function getRoleCount() {
            $.ajax({
                url: '/api/Role/GetCount/',
                type: 'GET',
                success: function (result) {
                    $('#role').text(result);
                },
                error: function (result) {
                    //alert("Error:" + result);
                }
            });
        }

        function getProductCount() {
            $.ajax({
                url: '/api/Product/GetCount/',
                type: 'GET',
                success: function (result) {
                    $('#product').text(result);
                },
                error: function (result) {
                    //alert("Error:" + result);
                }
            });
        }

        function getCategoryCount() {
            $.ajax({
                url: '/api/Category/GetCount/',
                type: 'GET',
                success: function (result) {
                    $('#category').text(result);
                },
                error: function (result) {
                    //alert("Error:" + result);
                }
            });
        }

        function getOrderCount() {
            $.ajax({
                url: '/api/Order/GetCount/',
                type: 'GET',
                success: function (result) {
                    $('#order').text(result);
                },
                error: function (result) {
                    //alert("Error:" + result);
                }
            });
        }

        var ctx = document.getElementById("myChart").getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                datasets: [{
                    label: 'Numbers of User',
                    data: [1, 2, 3, 5, 7, 12, 15, 14, 10, 14, 16, 20],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(50, 168, 82, 0.2)',
                        'rgba(168, 154, 50, 0.2)',
                        'rgba(50, 62, 168, 0.2)',
                        'rgba(168, 50, 160, 0.2)',
                        'rgba(79, 194, 182, 0.2)',
                        'rgba(150, 150, 39, 0.2)',
                    ],
                    borderColor: [
                        'rgba(255,99,132,1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)',
                        'rgba(50, 168, 82, 1)',
                        'rgba(168, 154, 50, 1)',
                        'rgba(50, 62, 168, 1)',
                        'rgba(168, 50, 160, 1)',
                        'rgba(79, 194, 182, 1)',
                        'rgba(150, 150, 39, 1)',
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
        var ctx2 = document.getElementById("myChart2").getContext('2d');
        var myChart = new Chart(ctx2, {
            type: 'doughnut',
            data: {
                labels: [
                    'Console',
                    'Handheld',
                    'Accessory',
                    'Game',
                    'Headset',
                    'Keyboard',
                    'Mouse and Speaker'
                ],
                datasets: [{
                    label: 'My First Dataset',
                    data: [15, 19, 12, 4, 15, 11, 9],
                    backgroundColor: [
                        'rgb(255, 99, 132)',
                        'rgb(54, 162, 235)',
                        'rgb(255, 205, 86)',
                        'rgba(50, 62, 168)',
                        'rgba(168, 50, 160)',
                        'rgba(79, 194, 182)',
                        'rgba(150, 150, 39)',
                    ],
                    hoverOffset: 4
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    </script>
}


